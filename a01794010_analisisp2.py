# -*- coding: utf-8 -*-
"""A01794010 AnalisisP2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15usaD9vN8ha7sU2PJaYp9yBhhyRL2P1d
"""

import pandas as pd


file_path = '/content/TC1.txt'
df = pd.read_csv(file_path)


def convert_numbers_to_binary_and_hexadecimal(number):
    try:
        number = int(number)
        binary = bin(number)[2:]  # Convierte a binario y elimina el prefijo "0b"
        hexadecimal = hex(number)[2:].upper()  # Convierte a hexadecimal y elimina el prefijo "0x", luego en mayúsculas
        return binary, hexadecimal
    except ValueError:
        return None, None


resultados_df = pd.DataFrame(columns=['Original', 'Binary', 'Hexadecimal'])


for columna in df.columns:
    original_values = df[columna]
    binary_values, hexadecimal_values = zip(*[convert_numbers_to_binary_and_hexadecimal(valor) for valor in original_values])
    resultados_df['Original'] = original_values
    resultados_df['Binary'] = binary_values
    resultados_df['Hexadecimal'] = hexadecimal_values


resultados_df.to_csv('resultados_conversion.txt', sep='\t', index=False, columns=['Original', 'Binary', 'Hexadecimal'])


print(resultados_df)

with open('resultadosTC1.txt', 'w') as txt_file:
    txt_file.write(resultados_df.to_string(index=False))

import pandas as pd


file_path = '/content/TC2.txt'
df = pd.read_csv(file_path)


def convert_numbers_to_binary_and_hexadecimal(number):
    try:
        number = int(number)
        binary = bin(number)[2:]  # Convierte a binario y elimina el prefijo "0b"
        hexadecimal = hex(number)[2:].upper()  # Convierte a hexadecimal y elimina el prefijo "0x", luego en mayúsculas
        return binary, hexadecimal
    except ValueError:
        return None, None


resultados_df = pd.DataFrame(columns=['Original', 'Binary', 'Hexadecimal'])


for columna in df.columns:
    original_values = df[columna]
    binary_values, hexadecimal_values = zip(*[convert_numbers_to_binary_and_hexadecimal(valor) for valor in original_values])
    resultados_df['Original'] = original_values
    resultados_df['Binary'] = binary_values
    resultados_df['Hexadecimal'] = hexadecimal_values


resultados_df.to_csv('resultados_conversion.txt', sep='\t', index=False, columns=['Original', 'Binary', 'Hexadecimal'])


print(resultados_df)
with open('resultadosTC2.txt', 'w') as txt_file:
    txt_file.write(resultados_df.to_string(index=False))

import pandas as pd


file_path = '/content/TC3.txt'
df = pd.read_csv(file_path)


def convert_numbers_to_binary_and_hexadecimal(number):
    try:
        number = int(number)
        binary = bin(number)[2:]  # Convierte a binario y elimina el prefijo "0b"
        hexadecimal = hex(number)[2:].upper()  # Convierte a hexadecimal y elimina el prefijo "0x", luego en mayúsculas
        return binary, hexadecimal
    except ValueError:
        return None, None


resultados_df = pd.DataFrame(columns=['Original', 'Binary', 'Hexadecimal'])


for columna in df.columns:
    original_values = df[columna]
    binary_values, hexadecimal_values = zip(*[convert_numbers_to_binary_and_hexadecimal(valor) for valor in original_values])
    resultados_df['Original'] = original_values
    resultados_df['Binary'] = binary_values
    resultados_df['Hexadecimal'] = hexadecimal_values


resultados_df.to_csv('resultados_conversionTC3.txt', sep='\t', index=False, columns=['Original', 'Binary', 'Hexadecimal'])


print(resultados_df)
with open('resultadosTC3.txt', 'w') as txt_file:
    txt_file.write(resultados_df.to_string(index=False))

import pandas as pd


file_path = '/content/TC4.txt'
df = pd.read_csv(file_path)


def convert_numbers_to_binary_and_hexadecimal(number):
    try:
        number = int(number)
        binary = bin(number)[2:]  # Convierte a binario y elimina el prefijo "0b"
        hexadecimal = hex(number)[2:].upper()  # Convierte a hexadecimal y elimina el prefijo "0x", luego en mayúsculas
        return binary, hexadecimal
    except ValueError:
        return None, None


resultados_df = pd.DataFrame(columns=['Original', 'Binary', 'Hexadecimal'])


for columna in df.columns:
    original_values = df[columna]
    binary_values, hexadecimal_values = zip(*[convert_numbers_to_binary_and_hexadecimal(valor) for valor in original_values])
    resultados_df['Original'] = original_values
    resultados_df['Binary'] = binary_values
    resultados_df['Hexadecimal'] = hexadecimal_values


resultados_df.to_csv('resultados_conversionTC4.txt', sep='\t', index=False, columns=['Original', 'Binary', 'Hexadecimal'])


print(resultados_df)
with open('resultadosTC4.txt', 'w') as txt_file:
    txt_file.write(resultados_df.to_string(index=False))

pip install pylint

import os
import subprocess


archivos_txt = ['/content/resultadosTC1.txt']


if not os.path.exists('pylint_results'):
    os.makedirs('pylint_results')


for archivo in archivos_txt:

    comando_pylint = f'pylint {archivo} --output-format=text > pylint_results/{archivo}_report.txt'


    subprocess.call(comando_pylint, shell=True)

print('Análisis de pylint completado.')


resultados_analisis = os.listdir('pylint_results')


for resultado in resultados_analisis:
    with open(os.path.join('pylint_results', resultado), 'r') as reporte:
        print(reporte.read())